#+title: Web analytics from CloudFront logs with GoAccess

First, turn on [[https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/distribution-web-values-specify.html#DownloadDistValuesLoggingOnOff][/Standard logging/]] in your CloudFront Distribution settings to get logs written to an S3 bucket. 
Then, use the [[https://aws.amazon.com/cli/][AWS command line interface]] to sync the logs to a local directory:[fn:filtering]

#+caption: =sync.sh=
#+begin_src shell :tangle sync.sh :shebang #!/bin/sh :eval no
  aws s3 sync s3://jeffkreeftmeijer.com-log-cf logs
#+end_src

[fn:filtering] Running the =aws s3 sync= command on an empty local directory took me two hours and produced a 2.1 GB directory of =.gz= files for roughly 3 years of logs.
Updating the logs by running the same command takes about five minutes.

Since I'm only interested in the stats for the last 28 days, it would make sense to only download the last 28 days of logs to generate the report.
However, AWS's command line tool doesn't support filters like that.

One thing that does work is using both the =--exclude= and =--include= options to include only the logs for the current month:

#+begin_src shell  :eval no
  aws s3 sync --exclude "*" --include "*2021-07-*" s3://jeffkreeftmeijer.com-log-cf logs
#+end_src

While this still loops over all files, it won't download anything outside of the selected month.

The command accepts the =--include== option multiple times, so it's possible to select multiple months like this.
One could, theoretically, write a script that finds the current year and month, then downloads that stats matching that month and the month before it to produce a 28-day report.
